openapi: 3.0.0

info:
  title: Databricks Secrets API
  description: Databricks REST API
  version: 0.1.0

servers:
- url: /api/2.0

paths:
  /secrets/scopes/create:
    post:
      operationId: createScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScopeAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/scopes/delete:
    post:
      operationId: deleteScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteScopeAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/scopes/list:
    get:
      operationId: listScopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopesResult'

  /secrets/put:
    post:
      operationId: put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/delete:
    post:
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/list:
    get:
      operationId: list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecretsAttributes'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResult'

  /secrets/acls/put:
    post:
      operationId: putAcls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSecretAclsAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/acls/delete:
    post:
      operationId: deleteAcls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretAclsAttributes'
        required: true
      responses:
        '200':
          description: OK

  /secrets/acls/get:
    get:
      operationId: getAcls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretAclsAttributes'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretAclsResult'

  /secrets/acls/list:
    get:
      operationId: listAcls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecretAclsAttributes'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretAclsResult'

components:
  schemas:
    ScopeBackendType:
      type: string
      enum:
        - DATABRICKS

    AclPermission:
      type: string
      enum:
        - READ
        - WRITE
        - MANAGE

    CreateScopeAttributes:
      type: object
      properties:
        scope:
          type: string
        initial_manage_principal:
          type: string
      required:
        - scope

    DeleteScopeAttributes:
      type: object
      properties:
        scope:
          type: string
      required:
        - scope

    ListScopesResult:
      type: object
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/SecretScopeAttributes'

    SecretAttributes:
      type: object
      properties:
        string_value:
          type: string
        bytes_value:
          type: string
          format: byte
        scope:
          type: string
        key:
          type: string
      required:
        - scope
        - key

    ListSecretsAttributes:
      type: object
      properties:
        scope:
          type: string
      required:
        - scope

    ListResult:
      type: object
      properties:
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/SecretMetadataAttributes'

    PutSecretAclsAttributes:
      type: object
      properties:
        scope:
          type: string
        principal:
          type: string
        permission:
          $ref: '#/components/schemas/AclPermission'
      required:
        - scope
        - principal
        - permission

    SecretAclsAttributes:
      type: object
      properties:
        scope:
          type: string
        principal:
          type: string
      required:
        - scope
        - principal

    SecretAclsResult:
      type: object
      properties:
        principal:
          type: string
        permission:
          $ref: '#/components/schemas/AclPermission'

    ListSecretAclsAttributes:
      type: object
      properties:
        scope:
          type: string

    ListSecretAclsResult:
      type: object
      properties:
        scope:
          type: array
          items:
            $ref: '#/components/schemas/AclItemAttributes'

    SecretScopeAttributes:
      type: object
      properties:
        name:
          type: string
        backend_type:
          $ref: '#/components/schemas/ScopeBackendType'

    SecretMetadataAttributes:
      type: object
      properties:
        key:
          type: string
        last_updated_timestamp:
          type: integer
          format: int64

    AclItemAttributes:
      type: object
      properties:
        principal:
          type: string
        permission:
          $ref: '#/components/schemas/AclPermission'
      required:
        - principal
        - permission